name: ðŸŽ¯ Run Unit Test via Pytest  
  
on: [push]
  
jobs:  
  build:  
    runs-on: ubuntu-latest  

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: zmitac_test
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:  
      matrix:  
        python-version: ["3.10", "3.11", "3.12"]  
  
    steps:
      - uses: actions/checkout@v3  

      - name: Set up Python ${{ matrix.python-version }}  
        uses: actions/setup-python@v4  
        with:  
          python-version: ${{ matrix.python-version }}  

      - name: Install dependencies  
        run: |  
          python -m pip install --upgrade pip  
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  

      - name: Lint with Black 
        run: |  
          pip install black  
          black . --check --diff
        continue-on-error: true  

      - name: Lint with isort  
        run: |  
          pip install isort  
          isort . --check --diff
        continue-on-error: true

      - name: Test with pytest  
        run: |  
          pip install pytest pytest-cov coverage
          pytest --cov --junitxml=junit.xml -o junit_family=legacy

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
